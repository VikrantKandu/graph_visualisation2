architecture_best_practices:
- best_practice: Use a Multi-Account Strategy
  description: Implement a multi-account strategy to isolate workloads and limit the
    blast radius in case of a security incident.
  severity: High
- best_practice: Enable VPC Flow Logs
  description: Enable VPC Flow Logs to capture information about the IP traffic going
    to and from network interfaces in your VPC.
  severity: Medium
- best_practice: Use AWS Organizations for Centralized Management
  description: Use AWS Organizations to centrally manage and govern your environment
    as you grow and scale your AWS resources.
  severity: Medium
- best_practice: Implement Auto Scaling
  description: Use Auto Scaling to automatically adjust capacity to maintain steady,
    predictable performance at the lowest possible cost.
  severity: Medium
- best_practice: Use Elastic Load Balancing
  description: Distribute incoming application traffic across multiple targets, such
    as EC2 instances, to increase the fault tolerance of your applications.
  severity: High
- best_practice: Leverage AWS CloudFormation for Infrastructure as Code
  description: Use AWS CloudFormation to model and set up your Amazon Web Services
    resources so that you can spend less time managing those resources and more time
    focusing on your applications.
  severity: Medium
security_best_practices:
- best_practice: Enable AWS Config
  description: Use AWS Config to assess, audit, and evaluate the configurations of
    your AWS resources.
  severity: High
- best_practice: Enable AWS CloudTrail
  description: Enable AWS CloudTrail to log, continuously monitor, and retain account
    activity related to actions across your AWS infrastructure.
  severity: Critical
- best_practice: Use AWS Identity and Access Management (IAM) Roles
  description: Use IAM roles to delegate access to users or services, avoiding the
    use of long-term access keys.
  severity: High
- best_practice: Implement Multi-Factor Authentication (MFA)
  description: Enable MFA on your AWS account and for all IAM users to add an extra
    layer of security.
  severity: Critical
- best_practice: Regularly Rotate IAM Credentials
  description: Regularly rotate IAM credentials to reduce the risk of compromised
    access keys.
  severity: High
- best_practice: Use Security Groups and Network ACLs
  description: Use security groups and network ACLs to control inbound and outbound
    traffic to your AWS resources.
  severity: High
- best_practice: Encrypt Data at Rest and in Transit
  description: Use AWS Key Management Service (KMS) to encrypt data at rest and TLS/SSL
    to encrypt data in transit.
  severity: Critical
- best_practice: Regularly Patch and Update Systems
  description: Regularly apply patches and updates to your operating systems, applications,
    and dependencies to protect against vulnerabilities.
  severity: High
- best_practice: Conduct Regular Security Audits
  description: Perform regular security audits and assessments to identify and mitigate
    potential vulnerabilities.
  severity: High
- best_practice: Use Amazon GuardDuty
  description: Enable Amazon GuardDuty to continuously monitor and analyze your AWS
    account and workloads for potential threats.
  severity: High
